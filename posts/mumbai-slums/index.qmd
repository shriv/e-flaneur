---
title: "Getting GIS data of Mumbai slums"
description: "Exploring slum GIS data for Mumbai in R."
execute:
  echo: false
  message: false
author: "Shrividya Ravi"
date: "2023-02-01"
categories: [data science, urban, india, mumbai]
image: "image.jpg"
bibliography: "references.bib"
csl: "ieee.csl"
---

```{r}
#| include: false
library(osmdata)
library(sf)
library(dplyr)
library(ggplot2)
library(patchwork)
library(osmplotr)
source("../../R/centroid_bbox.R")
```

According the 2011 census, around 42% of the population resides in slums [@MumbaiGreaterMumbai]. Given the rapid rates of growth in a megacity like Mumbai, it's likely that both the extent and the population of slum residents has only increased in the last decade. While the source of the GIS data is also several years old (circa 2015) [@GISMISSlumData], we can use it to understand the more about slums in the city. I have a long list of questions for quantitative understanding how slums are part of the urban fabric:

-   Slum concentrations around the city?
-   How large are individual slums?
-   How big are slum clusters?
-   What type of urban typologies exist between and next to slums?
-   How did slums evolve in various parts of the city?

Alongside the quantitative aspects also come the qualitative: how did slums start, how do they continue despite such incredible difficulties of life and what is their future?

Like many sources of data from India, the original data from the Slum Rehabilitation Authority (SRA) [@GISMISSlumData] is provided as a pdf map and a separate set of attributes also in pdf. This adds yet another item on my growing list of required R geospatial skills for urban analytics: converting pdf maps to digital shapefiles. However, I can defer this lesson for a little longer thanks to Opencity [@MumbaiSlumCluster] who have digitised the map to a KML format that can be directly read in as an `sf` object.

As a first step, I'm trying to get a sense of the extent of slums across the city. I've added key natural areas (in green) since Mumbai has several wetland areas and a large national park within the city boundaries. Slums (in red) are mostly distributed in Mumbai suburban district of Mumbai with a few exceptions like the well-known slum of Dharavi at the northwestern boundary of Mumbai city district. Given the extensive spread of slums, understanding how they dovetail with middle class and upper class urban typologies will be a key focus of my future analysis.

```{r}
#| output: false
# (Download and) read data from open-city

# file <- download.file(
#   url = "https://data.opencity.in/dataset/3ddbe9fc-a390-4140-b579-69bd01b4b1af/resource/5d6f72ed-a290-4931-821f-5476c148407b/download/mumbai_slum_cluster.kml", 
#   destfile = "~/Documents/mumbai-slums/open-city/mumbai_slum_cluster.kml"
# )

slums <- sf::st_read("~/Documents/mumbai-slums/open-city/mumbai_slum_cluster.kml")
sf_use_s2(FALSE)
```

```{r}
#| output: false
# get mumbai polygons for subsetting

# get mumbai polygon for subsetting
mumbai_suburban_poly <- getbb("mumbai suburban india", format_out = "polygon") %>% 
  as.data.frame() %>%
  st_as_sf(coords = c("V1", "V2")) %>% 
  # Combine so that whole dataframe becomes one polygon
  st_combine() %>% 
  st_cast("POLYGON") %>% 
  st_set_crs(4326) 

mumbai_city_poly <- getbb("mumbai city india", format_out = "polygon")[[1]] %>% 
  as.data.frame() %>%
  st_as_sf(coords = c("V1", "V2")) %>% 
  # Combine so that whole dataframe becomes one polygon
  st_combine() %>% 
  st_cast("POLYGON") %>% 
  st_set_crs(4326) 

```

```{r}
#| output: false

mumbai_suburban_slums <- st_intersection(
  st_make_valid(slums),
  mumbai_suburban_poly %>% st_as_sf() %>% st_cast("POLYGON"),
  )

mumbai_city_slums <- st_intersection(
  st_make_valid(slums), 
  mumbai_city_poly %>% st_cast("POLYGON"),
  )

```

```{r}
#| output: false
# bounding boxes and extend with spacey function
bbox <- get_centroid_bounding_box(
  c("lat" = 19.1, "lng" = 72.9),
  distance = 20000,
  dist.unit = "m") %>% 
  get_bbox()


dat_H <-
  extract_osm_objects (key = "boundary", value = "national_park", bbox = bbox)
dat_G <-
  extract_osm_objects (
    key = "natural",
    value = "water",
    return_type = "polygon",
    bbox = bbox,
    geom_only = TRUE
  )
dat_W <-
  extract_osm_objects (
    key = "natural",
    value = "wetland",
    return_type = "polygon",
    bbox = bbox,
    geom_only = TRUE
  )
dat_Y <-
  extract_osm_objects (
    key = "natural",
    value = "wood",
    return_type = "polygon",
    bbox = bbox,
    geom_only = TRUE
  )

all_natural <- bind_rows(dat_H, dat_G, dat_W, dat_Y)
green_city <- st_intersection(all_natural, mumbai_city_poly %>% st_as_sf())
green_suburban <- st_intersection(all_natural, mumbai_suburban_poly %>% st_as_sf())
```

```{r}
#| output: false
# Set up plots
p2 <- ggplot() + 
  geom_sf(data = mumbai_city_slums, fill = "red", colour = "red") + 
  geom_sf(data = mumbai_city_poly, size = 1, fill = NA) + 
  geom_sf(data = green_city, fill = "green", colour = NA) + 
  scale_fill_viridis_c(limits = c(0, 600), na.value = "transparent") +
  scale_x_continuous(breaks = seq(72.8, 73, by = 0.1)) + 
  theme_minimal() + 
  labs(x = "",
       y = "",
       title = "Mumbai city") + 
  theme(legend.position = "None")

p3 <- ggplot() + 
  geom_sf(data = mumbai_suburban_slums, fill = "red", colour = "red") + 
  geom_sf(data = green_suburban, fill = "green", colour = NA) + 
  geom_sf(data = mumbai_suburban_poly, size = 1, fill = NA) + 
  scale_fill_viridis_c(limits = c(0, 600), na.value = "transparent") +
  scale_x_continuous(breaks = seq(72.8, 73, by = 0.1)) + 
  theme_minimal() + 
  labs(x = "",
       y = "", 
       title = "Mumbai suburban") + 
  theme(legend.position = "None") 
```

```{r}
#| out-width: 100%
((p3 | p2)) + plot_layout(guides = 'collect')
```

### References

::: {#refs}
:::

### Credits

-   Post photo by <a href="https://unsplash.com/pt-br/@alfarnassolkar?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Alfarnas Solkar</a> on <a href="https://unsplash.com/photos/oqjl1kTw_Bo?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
