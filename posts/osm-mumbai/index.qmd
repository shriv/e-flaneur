---
title: "Building footprints for Mumbai"
execute:
  echo: false
  message: false
author: "Shrividya Ravi"
date: "2023-02-01"
categories: [data science, urban, india, mumbai, buildings]
image: "image.png"
bibliography: references.bib
csl: ieee.csl
---

```{r}
#| include: false
library(raster)
library(osmdata)
library(sf)
library(dplyr)
library(ggplot2)
library(patchwork)
library(sfnetworks)
library(foot)
library(units)
library(osmplotr)
source("../../R/centroid_bbox.R")
```

I rely heavily on Openstreetmap (OSM) for my geospatial analyses as I mainly work with vector data of buildings and streets. However, OSM is not always reliable - with particularly large issues for cities in developing countries like Mumbai. From my recent investigations, OSM seems especially bad for building footprints in areas with informal settlements or changes within the last few years. To learn more, I've compared OSM with a recent dataset called `GlobalML` from Microsoft [@MicrosoftGlobalMLBuildingFootprints2023]. Instructions on downloading data from `Global ML` can be found in [another blog post](https://shriv.github.io/e-flaneur/posts/global-ml).

```{r}
#| output: false
# load the Global ML footprints for approx Mumbai suburban and metropolitan region bbox
global_ml <- sf::st_read("~/Documents/global-ml-footprints/part-00055-2cb4a5ad-6652-48b0-a336-f09518f4c9e5.c000.geojson")

# need this for the bbox cropping to work
sf_use_s2(FALSE)
```

I first started with comparing OSM and Google maps streetviews centered around the area I grew up in (Sector 2, Vashi). I could quickly see that many buildings were missing in the footprints data. Global ML corroborates this especially for areas with many small building footprints - likely informal settlements.

```{r}
#| output: false
## OSM
bbox <- get_centroid_bounding_box(
  c("lat" = 19.07403, "lng" = 72.99571),
  distance = 500,
  dist.unit = "m") %>% 
  get_bbox()
structs <- c ("highway", "building")
structures <- osm_structures (structures = structs, col_scheme = "dark")
navi_mumbai_s2 <- make_osm_map (structures = structures, bbox = bbox)
p2 <- navi_mumbai_s2$map  + labs(title = "Sector 2, Vashi (OSM)")

## Global ML comparison
streets <- extract_osm_objects(bbox, key = "highway")
nm_bldgs <- st_crop(global_ml, xmin = bbox[1], ymin = bbox[2], xmax = bbox[3], ymax = bbox[4]) %>% st_cast("POLYGON")
nm_map <- osm_basemap(bbox = bbox, bg = "gray20")
nm_map <- add_osm_objects(nm_map, obj = nm_bldgs, col = "#646464FF") + labs(title = "Sector 2, Vashi (Global ML buildings)")
nm_map <- add_osm_objects(nm_map, streets, col = "#000000FF")
```

```{r}
#| out.width: 100%
(p2 + theme(plot.margin = unit(c(0,5,0,0), "pt"))) + nm_map
```

The situation is worse for known vast informal settlement areas like Shivaji Nagar in Eastern Mumbai suburban district. Here, OSM has not captured any building footprints but the whole area is densely built up! What's even more fascinating is that this area has been built up for quite some time [@ShivajiNagarHomegrown]. It would seem that OSM built environment polygons are not regularly maintained for Mumbai?

```{r}
#| output: false
## OSM
bbox <- get_centroid_bounding_box(
  c("lat" = 19.063637617804797, "lng" = 72.92389549177575),
  distance = 500,
  dist.unit = "m") %>% 
  get_bbox()
structs <- c ("highway", "building")
structures <- osm_structures (structures = structs, col_scheme = "dark")

shivaji_nagar <- make_osm_map (structures = structures, bbox = bbox)
p5 <- shivaji_nagar$map  + labs(title = "Shivaji Nagar (OSM)")

## Global ML comparison
streets <- extract_osm_objects(bbox, key = "highway")
sn_bldgs <- st_crop(global_ml, xmin = bbox[1], ymin = bbox[2], xmax = bbox[3], ymax = bbox[4]) %>% st_cast("POLYGON")
sn_map <- osm_basemap(bbox = bbox, bg = "gray20")
sn_map <- add_osm_objects(sn_map, obj = sn_bldgs, col = "#646464FF")
sn_map <- add_osm_objects(sn_map, streets, col = "#000000FF") + labs(title = "Shivaji Nagar (Global ML buildings)")

```

```{r}
#| out.width: 100%
(p5 + theme(plot.margin = unit(c(0,5,0,0), "pt"))) + sn_map
```

### References

::: {#refs}
:::
