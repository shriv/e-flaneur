---
title: "Population of Mumbai"
execute:
  echo: false
  message: false
author: "Shrividya Ravi"
date: "2022-08-01"
categories: [data-science, urban, india, mumbai]
image: "image.jpg"
---

```{r}
#| include: false
library(raster)
library(osmdata)
library(sf)
library(dplyr)
library(ggplot2)
library(patchwork)
library(stars)
library(latex2exp)
```

Megacities of the world are fascinating places. However, it's amazing to realise that they thrive in a data poor landscape. For example, a simple population count is difficult to pin down for Mumbai since the last census was in 2011 and the 2021 census has been delayed due to the pandemic. The Indian census recently updated population estimates for Mumbai as 17.2 million @MumbaiGreaterMumbai. An addition 8 million are spread across the metropolitan region on mainland - including the nearby planned-city-turned-urban-sprawl called [Navi Mumbai](https://en.wikipedia.org/wiki/Navi_Mumbai) where I grew up.

My attempts to find fine spatial resolution of population for Mumbai led me to Worldpop(@bondarenkoCensusProjectiondisaggregatedGridded2020a). While these estimates use clever statistical models, Worldpop estimates 13.38 million people in Mumbai as at 2020 (@SpatialDistributionPopulation). These values are difficult to reconcile against the estimates from the Indian government which estimate almost twice as many people!

```{r}
#| include: false

# get population counts from world pop data
pop <- read_stars("~/Documents/worldpop-data/ind_ppp_2020_constrained.tif")

# get mumbai polygon for subsetting
mumbai_poly <-  getbb("mumbai india", format_out = "polygon")[[1]] %>% 
  as.data.frame() %>%
  st_as_sf(coords = c("V1", "V2")) %>% 
  # Combine so that whole dataframe becomes one polygon
  st_combine() %>% 
  st_cast("POLYGON") %>% 
  st_set_crs(4326) 

# get mumbai polygon for subsetting
mumbai_suburban_poly <- getbb("mumbai suburban india", format_out = "polygon") %>% 
  as.data.frame() %>%
  st_as_sf(coords = c("V1", "V2")) %>% 
  # Combine so that whole dataframe becomes one polygon
  st_combine() %>% 
  st_cast("POLYGON") %>% 
  st_set_crs(4326) 

mumbai_city_poly <- getbb("mumbai city india", format_out = "polygon")[[1]] %>% 
  as.data.frame() %>%
  st_as_sf(coords = c("V1", "V2")) %>% 
  # Combine so that whole dataframe becomes one polygon
  st_combine() %>% 
  st_cast("POLYGON") %>% 
  st_set_crs(4326) 

```

The value of Worldpop estimates is their provision of population counts at a 100m$^2$ spatial resolution. Cropping the estimates to the two zones of Mumbai (Mumbai city and Mumbai suburban) shows some interesting spatial patterns. For example, Mumbai city appears to be much more homogeneous in population density than Mumbai suburban. The northern and eastern areas of Mumbai suburban are considerably more populated than the city zone.

```{r}
mumbai_pop <- st_crop(pop, mumbai_poly)
mumbai_suburban_pop <- st_crop(pop, mumbai_suburban_poly)
mumbai_city_pop <- st_crop(pop, mumbai_city_poly)

p1 <- ggplot() + 
  geom_stars(data = mumbai_pop) + 
  geom_sf(data = mumbai_poly, size = 1, fill = NA) + 
  scale_fill_viridis_c(limits = c(0, 600), na.value = "transparent") +
  scale_x_continuous(breaks = seq(72.8, 73, by = 0.1)) + 
  theme_minimal() + 
  labs(x = "",
       y = "",
       title = 'Mumbai') + 
  guides(fill = guide_legend("Population")) 

p2 <- ggplot() + 
  geom_stars(data = mumbai_city_pop) + 
  geom_sf(data = mumbai_city_poly, colour = "red", size = 1, fill = NA) + 
  scale_fill_viridis_c(limits = c(0, 600), na.value = "transparent") +
  scale_x_continuous(breaks = seq(72.8, 73, by = 0.1)) + 
  theme_minimal() + 
  labs(x = "",
       y = "",
       title = "City") + 
  theme(legend.position = "None")

p3 <- ggplot() + 
  geom_stars(data = mumbai_suburban_pop) + 
  geom_sf(data = mumbai_suburban_poly, colour = "red", size = 1, fill = NA) + 
  scale_fill_viridis_c(limits = c(0, 600), na.value = "transparent") +
  scale_x_continuous(breaks = seq(72.8, 73, by = 0.1)) + 
  theme_minimal() + 
  labs(x = "",
       y = "", 
       title = "Suburban") + 
  theme(legend.position = "None") 

((p1 | p3 / p2)) + 
  plot_layout(guides = 'collect')

```

```{r}
mumbai_city_pop_df <- mumbai_city_pop %>% 
  as.data.frame() %>% 
  mutate(zone = "Mumbai City")

mumbai_suburban_pop_df <- mumbai_suburban_pop %>% 
  as.data.frame() %>% 
  mutate(zone = "Mumbai Suburban")

mumbai_pop_df <- bind_rows(mumbai_city_pop_df, mumbai_suburban_pop_df)

```

### References
- Post photo by <a href="https://unsplash.com/ja/@harsh_jpeg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Harsh Kondekar</a> on <a href="https://unsplash.com/photos/SDZOP6R95k4?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
  